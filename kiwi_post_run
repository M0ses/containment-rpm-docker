#!/bin/bash

set -e
set -u

: ${TOPDIR:=/usr/src/packages}

IMAGE_DIR=$TOPDIR/KIWI
BUILD_DIR=/usr/lib/build

cd $IMAGE_DIR

# Local build:
# sles12-docker.x86_64-1.0.0-Build.tar.xz
# OBS build:
# sles12-docker.x86_64-1.0.0-Build5.2.tar.xz


EXT="tar.xz"
ARCH=$( rpm --eval '%{_arch}')
PREFIX="sles*-docker.${ARCH}-"
SUFFIX="-Build*${EXT}"

shopt -s nullglob
IMAGE=$(echo ${PREFIX}*${SUFFIX})
PACKAGES=$(echo ${PREFIX}*.packages)

if [ -z "$IMAGE" ]; then
    echo "Couldn't find anything in $IMAGE_DIR matching ${PREFIX}*${SUFFIX}."
    echo "Will skip containment rpm wrapping steps."
    exit 0
fi

echo "Attempting to wrap $IMAGE in a containment rpm ..."

SLE_VERSION="${IMAGE#sles}"
SLE_VERSION="${SLE_VERSION%%-docker.$ARCH*$EXT}"

NAME="sles${SLE_VERSION}-docker-image"
RELEASE=$(date +%Y%m%d%H%M%S)

VERSION="${IMAGE#$PREFIX}"
VERSION="${VERSION%%$SUFFIX}"
if [ -z "$VERSION" ]; then
    echo "Local build detected"
    # Just arbitrarily assign the version since we have nothing else
    # to go on.
    VERSION=1
fi

echo "name $NAME"
echo "version $VERSION"
echo "release $RELEASE"

sed -e "s/__NAME__/$NAME/g" \
    -e "s/__VERSION__/$VERSION/g" \
    -e "s/__RELEASE__/$RELEASE/g" \
    -e "s/__SOURCE__/$IMAGE/g" \
    -e "s/__SLE_VERSION__/$SLE_VERSION/g" \
    < $BUILD_DIR/image.spec.in \
    > $BUILD_DIR/image.spec

changelog-generator --new-packages $PACKAGES \
  --old-packages /usr/share/changelog-generator-data/old.packages \
  --changelog /usr/share/changelog-generator-data/old.changes > $BUILD_DIR/image.changes

cat $BUILD_DIR/image.changes >> $BUILD_DIR/image.spec
mv $BUILD_DIR/image.changes $IMAGE_DIR

# Local builds have the file already in place, that's not true on IBS
if [ ! -f $TOPDIR/SOURCES/$IMAGE ]; then
  ln $IMAGE $TOPDIR/SOURCES
fi

rpmbuild -ba $BUILD_DIR/image.spec

# required for the BS to find the rpm, because it is
# a "non-standard result file for KIWI"
mkdir -p $TOPDIR/OTHER
mv $TOPDIR/RPMS/$ARCH/$NAME-$VERSION-$RELEASE.$ARCH.rpm $TOPDIR/OTHER/
